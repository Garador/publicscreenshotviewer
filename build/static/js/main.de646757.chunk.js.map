{"version":3,"sources":["src/view/index.module.css","src/view/view.tsx","src/components/context/firebase.ts","src/components/manager/imageManager.ts","index.tsx"],"names":["module","exports","ViewImages","props","state","pagination","startAt","ammount","currentImageKey","currentImages","imageFlag","allowedImageFlags","loadImages","bind","getCurrentImage","viewNext","viewPrevious","setFlag","goTo","code","window","prompt","this","isValidCode","url","location","origin","pathname","href","alert","a","imageManager","data","setState","element","keys","Object","length","newData","assign","JSON","parse","stringify","console","log","err","currentKey","indexOf","match","queryString","search","urlParams","URLSearchParams","get","loadQuery","imageUrl","flag","urlSplit","split","imageCode","value","className","styles","onClick","style","marginRight","map","index","disabled","src","getResizedImage","alt","maxWidth","React","Component","WithFirebase","createContext","ImageManager","app","id","Math","floor","random","toString","database","goOnline","startKey","ref","orderByKey","limitToFirst","exists","toJSON","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","ReactDOM","render","Helmet","name","content","rel","Provider","Consumer","document","getElementById"],"mappings":"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","file":"static/js/main.de646757.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"main-container\":\"view_main-container__171D4\"};","import React from 'react';\nimport { ImageManager } from '../components/manager/imageManager';\nimport styles from './index.module.css';\n\nexport class ViewImages extends React.Component<{imageManager: ImageManager}> {\n    state:{\n        pagination:{\n            startAt: string,\n            ammount: number,\n            currentImageKey: string\n        },\n        currentImages: {[key: string]: string},\n        imageFlag: \"l\" | \"m\" | \"t\" | \"s\"\n    } = {\n        pagination: {\n            startAt: \"aa0000\",\n            ammount: 10,\n            currentImageKey: \"\"\n        },\n        currentImages: {},\n        imageFlag: \"m\"\n    }\n\n    allowedImageFlags:string[] = [\"l\", \"m\", \"t\", \"s\"];\n\n    constructor(props:any){\n        super(props);\n        this.loadImages = this.loadImages.bind(this);\n        this.getCurrentImage = this.getCurrentImage.bind(this);\n        this.viewNext = this.viewNext.bind(this);\n        this.viewPrevious = this.viewPrevious.bind(this);\n        this.setFlag = this.setFlag.bind(this);\n        this.goTo = this.goTo.bind(this);\n    }\n\n    goTo(){\n        const code = window.prompt(\"Please introduce your code\")\n        if(code && this.isValidCode(code)){\n            const url = `${window.location.origin}${window.location.pathname}?code=${code}`;\n            window.location.href = url;\n        }else{\n            window.alert(\"Code not valid! Must start with two lowercase letters and end with 4 numbers.\");\n        }\n    }\n\n\n    async loadImages(){\n        try{\n            const data = await this.props.imageManager.loadImages(this.state.pagination.startAt, this.state.pagination.ammount);\n            this.setState((element: any) => {\n                let keys = Object.keys(data || {});\n                if(Object.keys(keys).length > 1){\n                    const newData = Object.assign(JSON.parse(JSON.stringify(element['currentImages'])), data || {})\n                    console.log(\"Adding new keys: \",{data, newData});\n                    element['currentImages'] = newData;\n                    element['pagination']['currentImageKey'] = keys[0];\n                    return element;\n                }else{\n                    //Reached the end. No more keys returned.\n                    return element;\n                }\n            });\n        }catch(err){\n            console.log({err});\n        }\n    }\n\n    async viewNext(){\n        let currentKey = this.state.pagination.currentImageKey;\n        let keys = Object.keys(this.state.currentImages);\n        if(keys.length < 1){\n            return;\n        }\n        if(keys.indexOf(currentKey) == keys.length - 1){\n            //Load next set of keys.\n            console.log(\"//Load next set of keys.\");\n            this.setState((element: any) => {\n                element.pagination['startAt'] = keys[keys.indexOf(currentKey)];\n                return element;\n            }, () => {\n                this.loadImages();\n            });\n        }else{\n            //Load next key to the index.\n            console.log(\"//Load next key to the index.\");\n            this.setState((element: any) => {\n                element.pagination['currentImageKey'] = keys[keys.indexOf(currentKey)+1];\n                return element;\n            }, () => {\n                //this.loadImages();\n            });\n        }\n    }\n\n    async viewPrevious(){\n        let currentKey = this.state.pagination.currentImageKey;\n        let keys = Object.keys(this.state.currentImages);\n        if(keys.length < 1){\n            return;\n        }\n        if(keys.indexOf(currentKey) == 0){\n            //Finish backtracking.\n        }else{\n            //Load previous key to the index.\n            console.log(\"//Load next key to the index.\");\n            this.setState((element: any) => {\n                element.pagination['currentImageKey'] = keys[keys.indexOf(currentKey)-1];\n                return element;\n            }, () => {\n                //this.loadImages();\n            });\n        }\n\n    }\n\n    isValidCode(code: string){\n        return code.match(/[a-z]{2}[0-9]{4}/);\n    }\n\n    async loadQuery(){\n        //Loads query.\n        const queryString = window.location.search;\n        const urlParams = new URLSearchParams(queryString);\n        const code = urlParams.get(\"code\");\n        if(code && this.isValidCode(code)){\n            //Load the query.\n            this.setState((element: any) => {\n                element.pagination['startAt'] = code;\n                return element;\n            }, () => {\n                this.loadImages();\n            });\n        }else{\n            //Not a valid code. Do nothing.\n        }\n    }\n\n    componentDidMount(){\n        this.loadQuery();\n    }\n\n    /**\n     * @description Loads the proper image.\n     * @param imageUrl The imgur image URL.\n     */\n    getResizedImage(imageUrl:string){\n        if(imageUrl.indexOf(\"imgur.com\") < 1){\n            //If image isn't from imgur, we return it as is.\n            return imageUrl;\n        }\n        let flag = this.state.imageFlag;\n        const url = imageUrl;\n        let urlSplit = url.split(\"/\");\n        let imageCode = urlSplit[urlSplit.length - 1].split(\".\")[0];\n        const resultingUrl = `https://i.imgur.com/${imageCode}${flag}.png`;\n        return resultingUrl;\n    }\n\n    setFlag(flag: string){\n        this.setState({\n            imageFlag: flag\n        });\n    }\n\n    get imageFlag(){\n        return this.state.imageFlag;\n    }\n\n    getCurrentImage(){\n        const value = this.state.currentImages[this.state.pagination.currentImageKey];\n        return (!value || value === \"null\") ? \"https://via.placeholder.com/350x150\" : value;\n    }\n\n    render(){\n        return (\n            <div className={`container ${styles['main-container']}`}>\n                <div className=\"row\">\n                    <div className=\"col-xs-12\">\n                        <h1>Hello There</h1>\n                        <br/>\n                        <button onClick={this.loadImages} className=\"btn btn-success\">Initial Load</button>\n                        <span style={{marginRight:'25pt'}}></span>\n                        <button onClick={this.goTo} className=\"btn btn-success\">Go To</button>\n                        <br/><br/>\n                        {\n                            this.allowedImageFlags.map((element, index) => (\n                                <button key={index} \n                                disabled={this.state.imageFlag === element}\n                                className={`btn btn-default`} onClick={()=>{\n                                    this.setFlag(element)\n                                }}>{element}</button>\n                            ))\n                        }\n                        <br/>\n                    </div>\n                    <div className=\"col-xs-12\">\n                        <table className=\"table\">\n                            <tfoot>\n                                <tr>\n                                    <td onClick={this.viewPrevious}>\n                                        <button className=\"btn btn-info\">Prev</button>\n                                    </td>\n                                    <td onClick={this.viewNext}>\n                                        <button className=\"btn btn-info\">Next</button>\n                                    </td>\n                                </tr>\n                            </tfoot>\n                        </table>\n                    </div>\n                    <div className=\"col-xs-12 col-md-6\">\n                        <h1>Image code: {this.state.pagination.currentImageKey}</h1>\n                    {\n                        <img src={this.getResizedImage(this.getCurrentImage())} className=\"img-fluid\" alt=\"Responsive image\" style={{maxWidth:\"100%\"}}/>\n                    }\n                    </div>\n                    <br/><br/><br/>\n                </div>\n            </div>\n        );\n    }\n}","import React from 'react';\n \nconst WithFirebase = React.createContext({});\n \nexport default WithFirebase;","import firebase from 'firebase';\n\nexport class ImageManager {\n    public id:string = Math.floor(Math.random()*1e5).toString(32);\n    private app: firebase.app.App;\n    private database: firebase.database.Database;\n\n    constructor(app: firebase.app.App){\n        this.app = app;\n        this.database = this.app.database();\n        this.database.goOnline();\n    }\n\n\n    async loadImages(startKey: string, ammount: number): Promise<{[index:string]:string}>{\n        const data = await this.database.ref(\"image_refs\")\n        .orderByKey()\n        .startAt(startKey)\n        .limitToFirst(ammount)\n        .get();\n        return data.exists() ? data.toJSON() : <any>{};\n    }\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport firebase from 'firebase';\nimport { ViewImages } from './src/view/view';\nimport WithFirebase from './src/components/context/firebase';\nimport { ImageManager } from './src/components/manager/imageManager';\nimport Helmet from \"react-helmet\";\n\nfirebase.initializeApp({\n  apiKey: \"AIzaSyB0MMqMb9j-TXl7q8qhcPZis2La1ef_IVc\",\n  authDomain: \"captured-image-viewer.firebaseapp.com\",\n  projectId: \"captured-image-viewer\",\n  storageBucket: \"captured-image-viewer.appspot.com\",\n  messagingSenderId: \"887099902\",\n  appId: \"1:887099902:web:5524e6eb1b95f91cc9f0af\"\n});\n\nconst imageManager:ImageManager = new ImageManager(firebase.app());\n\nReactDOM.render(\n  <div>\n    <Helmet>\n      <title>Bootstrap Example</title>\n      <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\"/>\n      <link rel=\"stylesheet\" href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.4.1/css/bootstrap.min.css\"/>\n      <script src=\"https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js\"></script>\n      <script src=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.4.1/js/bootstrap.min.js\"></script>\n      <link rel=\"stylesheet\" href=\"./customStyles/main.css\"/>\n    </Helmet>\n    <WithFirebase.Provider value={{\n      imageManager: imageManager\n    }}>\n      <WithFirebase.Consumer>\n        {\n          (element: any) => {\n            return <ViewImages imageManager={element.imageManager}/>\n          }\n        }\n      </WithFirebase.Consumer>\n    </WithFirebase.Provider>\n  </div>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}